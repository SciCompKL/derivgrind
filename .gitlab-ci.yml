image: debian:11.5

variables:
  GIT_SUBMODULE_STRATEGY: recursive

build:
  stage: build
  script:
    - apt-get update
    - apt-get install -y build-essential binutils gfortran automake gcc-multilib g++-multilib python3 python3-dev
    - ./autogen.sh
    - CFLAGS=-g ./configure --prefix=$PWD/install --enable-fortran --enable-python --enable-mlframeworks
    - make install
  artifacts:
    paths:
      - install/

build_lightweight:
  stage: build
  script:
    - apt-get update
    - apt-get install -y build-essential binutils gfortran automake gcc-multilib g++-multilib python3 python3-dev
    - ./autogen.sh
    - CFLAGS=-g ./configure --prefix=$PWD/install_lightweight --enable-fortran --enable-python --enable-mlframeworks SHADOW_LAYERS_64=16,16,16,16
    - make install
  artifacts:
    paths:
      - install_lightweight/

test_dot_x86:
  stage: test
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gfortran gdb gcc-multilib g++-multilib gfortran-multilib libc6-dbg clang libomp-dev python3 python3-numpy
    - cd derivgrind/diff_tests && python3 run_tests.py dot_x86*

test_bar_x86:
  stage: test
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gfortran gdb gcc-multilib g++-multilib gfortran-multilib libc6-dbg clang libomp-dev python3 python3-numpy
    - cd derivgrind/diff_tests && python3 run_tests.py bar_x86*

test_dot_amd64:
  stage: test
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gfortran gdb gcc-multilib g++-multilib gfortran-multilib libc6-dbg clang libomp-dev python3 python3-numpy
    - cd derivgrind/diff_tests && python3 run_tests.py dot_amd64* --prefix=$PWD/../../install_lightweight

test_bar_amd64:
  stage: test
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gfortran gdb gcc-multilib g++-multilib gfortran-multilib libc6-dbg clang libomp-dev python3 python3-numpy
    - cd derivgrind/diff_tests && python3 run_tests.py bar_amd64* --prefix=$PWD/../../install_lightweight

test_trick_amd64:
  stage: test
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential python3 libgcrypt20-dev
    - cd derivgrind/trick_tests && python3 trick-tests.py --prefix=$PWD/../../install_lightweight

test_perf_x86:
  stage: test
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gcc-multilib g++-multilib clang python3 python3-numpy python3-pip time
    - pip install anybadge
    - mkdir -p badges
    - anybadge -l 'Forward-mode run-time' -v 'Error' -f badges/dot_gcc_o3_x86.svg -c 'red'
    - anybadge -l 'Forward-mode run-time' -v $(cd derivgrind/diff_tests && python3 run_tests.py --codidir=$PWD/../externals/CoDiPack/include perf_dot_x86_g++_o3_burgers_badge | awk '$1 ~ /OK./ { print $2 "x" }') -f badges/dot_gcc_o3_x86.svg --overwrite -c 'green' || true
    - anybadge -l 'Recording-mode run-time' -v 'Error' -f badges/bar_gcc_o3_x86.svg -c 'red'
    - anybadge -l 'Recording-mode run-time' -v $(cd derivgrind/diff_tests && python3 run_tests.py --codidir=$PWD/../externals/CoDiPack/include perf_bar_x86_g++_o3_burgers_badge | awk '$1 ~ /OK./ { print $2 "x" }') -f badges/bar_gcc_o3_x86.svg --overwrite -c 'green' || true
  artifacts:
    paths:
      - badges/

test_torch_x86:
  stage: test
  script: 
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gcc-multilib g++-multilib python3 python3-pip
    - pip install torch numpy
    - |
      cat > mylib.c <<EOF
      void myfun(int param_size, char* param_buf, int input_count, double* input_buf, int output_count, double* output_buf){
        output_buf[0] = 3.14*input_buf[0] + 5.0 + input_buf[1]*input_buf[2];
      }
      EOF
    - gcc mylib.c -shared -fPIC -o mylib.so -m32
    - |
      LD_LIBRARY_PATH=$PWD PYTHONPATH=$PWD/install/lib/python3/site-packages python3 <<EOF
      import torch
      import derivgrind_torch
      import numpy as np
      import sys
      x = torch.tensor([4.0,-2.0,6.5],dtype=torch.float64,requires_grad=True)
      y = derivgrind_torch.derivgrind("mylib.so","myfun","x86").apply(b"",x,1)
      y.backward()
      err = np.linalg.norm(x.grad-np.array([3.14,6.5,-2.0]))
      print("Error:", err)
      sys.exit(1 if err>1e-8 else 0)
      EOF

test_tensorflow_x86:
  stage: test
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gcc-multilib g++-multilib python3 python3-pip
    - pip install tensorflow numpy
    - |
      cat > mylib.c <<EOF
      void myfun(int param_size, char* param_buf, int input_count, double* input_buf, int output_count, double* output_buf){
      output_buf[0] = 3.14*input_buf[0] + 5.0 + input_buf[1]*input_buf[2];
      }
      EOF
    - gcc mylib.c -shared -fPIC -o mylib.so -m32
    - |
      LD_LIBRARY_PATH=$PWD PYTHONPATH=$PWD/derivgrind/wrappers/tensorflow/:$PWD/install/lib/python3/site-packages TF_CPP_MIN_LOG_LEVEL=3 python3 <<EOF
      import tensorflow as tf
      import derivgrind_tensorflow
      import numpy as np
      import sys
      x = tf.Variable([4.0,-2.0,6.5],dtype=tf.float64)
      with tf.GradientTape() as tape:
        y = derivgrind_tensorflow.derivgrind("mylib.so","myfun","x86").apply(b"",x,1)
      dy_dx = tape.gradient(y,x)
      err = np.linalg.norm(dy_dx.numpy()-np.array([3.14,6.5,-2.0]))
      print("Error:", err)
      sys.exit(1 if err>1e-8 else 0)
      EOF


.test_dot_amd64:
  stage: test
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gfortran python3 python3-numpy python3-dev gdb gcc-multilib g++-multilib gfortran-multilib libc6-dbg git clang libomp-dev
    - cd derivgrind/diff_tests && ./setup.sh && cd - 
    - cd derivgrind/diff_tests && python3 run_tests.py dot_amd64*

.test_bar_amd64:
  stage: test
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gfortran python3 python3-numpy python3-dev gdb gcc-multilib g++-multilib gfortran-multilib libc6-dbg git clang libomp-dev
    - cd derivgrind/diff_tests && ./setup.sh && cd - 
    - cd derivgrind/diff_tests && python3 run_tests.py bar_amd64*
