image: debian:11.3

variables:
  GIT_SUBMODULE_STRATEGY: recursive

build:
  stage: build
  script:
    - apt-get update
    - apt-get install -y build-essential binutils gfortran automake gcc-multilib g++-multilib python3 python3-dev
    - ./autogen.sh
    - CFLAGS=-g ./configure --prefix=$PWD/install --enable-fortran --enable-python
    - make install
  artifacts:
    paths:
      - install/

test_dot_x86:
  stage: test
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gfortran gdb gcc-multilib g++-multilib gfortran-multilib libc6-dbg clang libomp-dev python3 python3-numpy
#    - dpkg --add-architecture i386
#    - apt-get update
#    - apt-get install -y python3:i386 python3-numpy:i386 python3-dev:i386
    - cd derivgrind/diff_tests && python3 run_tests.py dot_x86*

test_bar_x86:
  stage: test
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gfortran gdb gcc-multilib g++-multilib gfortran-multilib libc6-dbg clang libomp-dev python3 python3-numpy
#    - dpkg --add-architecture i386
#    - apt-get update
#    - apt-get install -y python3:i386 python3-numpy:i386 python3-dev:i386
    - cd derivgrind/diff_tests && python3 run_tests.py bar_x86*

test_perf_x86:
  stage: test
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gcc-multilib g++-multilib clang python3 python3-numpy python3-pip
    - pip install anybadge
    - mkdir -p badges
    - anybadge -l 'Forward-mode run-time' -v 'Error' -f badges/dot_gcc_o3_x86.svg
    - anybadge -l 'Forward-mode run-time' -v $(cd derivgrind/diff_tests && python3 run_tests.py --codidir=$PWD/../externals/CoDiPack/include perf_dot_x86_g++_o3_burgers | awk '$1 ~ /OK./ { print $2 }') -f badges/dot_gcc_o3_x86.svg || true
    - anybadge -l 'Recording-mode run-time' -v 'Error' -f badges/bar_gcc_o3_x86.svg
    - anybadge -l 'Recording-mode run-time' -v $(cd derivgrind/diff_tests && python3 run_tests.py --codidir=$PWD/../externals/CoDiPack/include perf_bar_x86_g++_o3_burgers | awk '$1 ~ /OK./ { print $2 }') -f badges/bar_gcc_o3_x86.svg || true
  artifacts:
    paths:
      - badges/

test_torch_x86:
  stage: test
  script: 
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gcc-multilib g++-multilib python3 python3-numpy python3-torch
    - |
      cat > mylib.c <<EOF
      void myfun(int param_size, char* param_buf, int input_count, double* input_buf, int output_count, double* output_buf){
        output_buf[0] = 3.14*input_buf[0] + 5.0 + input_buf[1]*input_buf[2];
      }
      EOF
    - gcc mylib.c -shared -fPIC -o mylib.so -m32
    - |
      LD_LIBRARY_PATH=$PWD PYTHONPATH=$PWD/install/lib/python3/site-packages python3 <<EOF
      import torch
      import derivgrind_torch
      import numpy as np
      x = torch.tensor([4.0,-2.0,6.5],dtype=torch.float64,requires_grad=True)
      y = derivgrind_torch.derivgrind("mylib.so","myfun","x86").apply(b"",x,1)
      y.backward()
      err = np.linalg.norm(x.grad-np.array([3.14,6.5,-2.0]))
      print("Error:", err)
      exit(1 if err>1e-8 else 0)
      EOF

.test_dot_amd64:
  stage: test
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gfortran python3 python3-numpy python3-dev gdb gcc-multilib g++-multilib gfortran-multilib libc6-dbg git clang libomp-dev
    - cd derivgrind/diff_tests && ./setup.sh && cd - 
    - cd derivgrind/diff_tests && python3 run_tests.py dot_amd64*

.test_bar_amd64:
  stage: test
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update
    - apt-get install -y build-essential gfortran python3 python3-numpy python3-dev gdb gcc-multilib g++-multilib gfortran-multilib libc6-dbg git clang libomp-dev
    - cd derivgrind/diff_tests && ./setup.sh && cd - 
    - cd derivgrind/diff_tests && python3 run_tests.py bar_amd64*
